{"version":3,"sources":["src/controller.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAAqB,U;;;;;;;wCAEE,M,EAAQ,Q,EAAU,I,EAAM;AACvC,oBAAI,KAAK,UAAL,KAAoB,SAAxB,EAAmC;AAC/B,yBAAK,UAAL,GAAkB,UAAC,KAAD,EAAU;AACxB,4BAAM,aAAa,EAAC,GAAG,MAAM,aAAN,CAAoB,CAApB,EAAuB,KAA3B,EAAkC,GAAG,MAAM,aAAN,CAAoB,CAApB,EAAuB,KAA5D,EAAnB;;AAEA,4BAAM,YAAY,SAAZ,SAAY,CAAC,KAAD,EAAU;AACxB;AACA,kCAAM,cAAN;AACH,yBAHD;;AAKA,4BAAM,WAAW,SAAX,QAAW,CAAC,KAAD,EAAU;AACvB,gCAAM,WAAW,MAAM,cAAN,CAAqB,CAArB,CAAjB;AACA;AACA,gCAAI,SAAS,KAAT,GAAiB,WAAW,WAAX,CAAuB,IAAxC,IAAgD,SAAS,KAAT,GAAiB,WAAW,WAAX,CAAuB,KAAxF,IAAiG,SAAS,KAAT,GAAiB,WAAW,WAAX,CAAuB,GAAzI,IAAgJ,SAAS,KAAT,GAAiB,WAAW,WAAX,CAAuB,MAA5L,EAAoM;AAChM;AACH;;AAED,gCAAM,UAAU,SAAS,KAAT,GAAiB,WAAW,CAA5C;AACA,gCAAM,UAAU,SAAS,KAAT,GAAiB,WAAW,CAA5C;;AAEA,gCAAI,KAAK,GAAL,CAAS,OAAT,IAAoB,EAApB,IAA0B,KAAK,GAAL,CAAS,OAAT,IAAoB,EAAlD,EAAsD;AAClD,oCAAI,KAAK,GAAL,CAAS,OAAT,IAAoB,KAAK,GAAL,CAAS,OAAT,CAAxB,EAA2C;AACvC,wCAAI,UAAU,CAAd,EAAiB;AACb,iDAAS,IAAT;AACH,qCAFD,MAEO;AACH,iDAAS,MAAT;AACH;AACJ,iCAND,MAMO;AACH,wCAAI,UAAU,CAAd,EAAiB;AACb,iDAAS,OAAT;AACH,qCAFD,MAEO;AACH,iDAAS,MAAT;AACH;AACJ;AACJ;;AAED,mCAAO,mBAAP,CAA2B,WAA3B,EAAwC,SAAxC;AACA,mCAAO,mBAAP,CAA2B,UAA3B,EAAuC,QAAvC;AACH,yBA5BD;;AA8BA,+BAAO,gBAAP,CAAwB,WAAxB,EAAqC,SAArC;AACA,+BAAO,gBAAP,CAAwB,UAAxB,EAAoC,QAApC;AACH,qBAxCD;AAyCH;;AAED,oBAAI,IAAJ,EAAU;AACN,2BAAO,gBAAP,CAAwB,YAAxB,EAAsC,KAAK,UAA3C;AACH,iBAFD,MAEO;AACH,2BAAO,mBAAP,CAA2B,YAA3B,EAAyC,KAAK,UAA9C;AACH;AACJ;;;2CAEqB,M,EAAQ,Q,EAAU,I,EAAM;AAC1C,oBAAI,KAAK,OAAL,KAAiB,SAArB,EAAgC;AAC5B,yBAAK,OAAL,GAAe,UAAC,KAAD,EAAU;AACrB,gCAAQ,MAAM,OAAd;AACI,iCAAK,EAAL,CADJ,CACY;AACR,iCAAK,EAAL;AAAQ;AACJ,yCAAS,IAAT;AACA;AACJ,iCAAK,EAAL,CALJ,CAKY;AACR,iCAAK,EAAL;AAAQ;AACJ,yCAAS,MAAT;AACA;AACJ,iCAAK,EAAL,CATJ,CASY;AACR,iCAAK,EAAL;AAAQ;AACJ,yCAAS,MAAT;AACA;AACJ,iCAAK,EAAL,CAbJ,CAaY;AACR,iCAAK,EAAL;AAAQ;AACJ,yCAAS,OAAT;AACA;AAhBR;AAkBH,qBAnBD;AAoBH;;AAED,oBAAI,IAAJ,EAAU;AACN,2BAAO,gBAAP,CAAwB,SAAxB,EAAmC,KAAK,OAAxC;AACH,iBAFD,MAEO;AACH,2BAAO,mBAAP,CAA2B,SAA3B,EAAsC,KAAK,OAA3C;AACH;AACJ;;;8CAEwB,M,EAAQ;AAC7B,uBAAO,gBAAP,CAAwB,aAAxB,EAAuC,UAAC,KAAD,EAAU;AAC7C,0BAAM,cAAN;AACH,iBAFD;AAGH;;;wCAEkB,M,EAAQ,Q,EAAU;AACjC,oBAAI,OAAO,cAAP,CAAsB,cAAtB,CAAJ,EAA2C;AACvC,yBAAK,WAAL,CAAiB,MAAjB,EAAyB,QAAzB,EAAmC,IAAnC;AACH,iBAFD,MAEO;AACH,yBAAK,cAAL,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,IAAtC;AACH;AACJ;;;2CAEqB,M,EAAQ;AAC1B,oBAAI,OAAO,cAAP,CAAsB,cAAtB,CAAJ,EAA2C;AACvC,yBAAK,WAAL,CAAiB,MAAjB,EAAyB,IAAzB,EAA+B,KAA/B;AACH,iBAFD,MAEO;AACH,yBAAK,cAAL,CAAoB,MAApB,EAA4B,IAA5B,EAAkC,KAAlC;AACH;AACJ;;;;;;sBAzGgB,U;;;AA4GrB,eAAW,WAAX,GAAyB,IAAzB","file":"controller.js","sourcesContent":["export default class Controller {\n\n    static _touchEvent(target, callback, bind) {\n        if (this.touchStart === undefined) {\n            this.touchStart = (event)=> {\n                const startPoint = {x: event.targetTouches[0].pageX, y: event.targetTouches[0].pageY};\n\n                const touchMove = (event)=> {\n                    // prevent window scroll\n                    event.preventDefault();\n                };\n\n                const touchEnd = (event)=> {\n                    const endPoint = event.changedTouches[0];\n                    // out of control area\n                    if (endPoint.pageX < Controller.controlArea.left || endPoint.pageX > Controller.controlArea.right || endPoint.pageY < Controller.controlArea.top || endPoint.pageY > Controller.controlArea.bottom) {\n                        return;\n                    }\n\n                    const offsetX = endPoint.pageX - startPoint.x;\n                    const offsetY = endPoint.pageY - startPoint.y;\n\n                    if (Math.abs(offsetX) > 30 || Math.abs(offsetY) > 30) {\n                        if (Math.abs(offsetY) > Math.abs(offsetX)) {\n                            if (offsetY < 0) {\n                                callback('up');\n                            } else {\n                                callback('down');\n                            }\n                        } else {\n                            if (offsetX > 0) {\n                                callback('right');\n                            } else {\n                                callback('left');\n                            }\n                        }\n                    }\n\n                    window.removeEventListener('touchmove', touchMove);\n                    window.removeEventListener('touchend', touchEnd);\n                };\n\n                window.addEventListener('touchmove', touchMove);\n                window.addEventListener('touchend', touchEnd);\n            };\n        }\n\n        if (bind) {\n            target.addEventListener('touchstart', this.touchStart);\n        } else {\n            target.removeEventListener('touchstart', this.touchStart);\n        }\n    }\n\n    static _keyboardEvent(target, callback, bind) {\n        if (this.keyDown === undefined) {\n            this.keyDown = (event)=> {\n                switch (event.keyCode) {\n                    case 87:// w\n                    case 73:// i\n                        callback('up');\n                        break;\n                    case 65:// a\n                    case 74:// j\n                        callback('left');\n                        break;\n                    case 83:// s\n                    case 75:// k\n                        callback('down');\n                        break;\n                    case 68:// d\n                    case 76:// l\n                        callback('right');\n                        break;\n                }\n            };\n        }\n\n        if (bind) {\n            window.addEventListener('keydown', this.keyDown);\n        } else {\n            window.removeEventListener('keydown', this.keyDown);\n        }\n    }\n\n    static removeContextMenu(target) {\n        target.addEventListener('contextmenu', (event)=> {\n            event.preventDefault();\n        });\n    }\n\n    static addListener(target, callback) {\n        if (window.hasOwnProperty(\"ontouchstart\")) {\n            this._touchEvent(target, callback, true);\n        } else {\n            this._keyboardEvent(target, callback, true);\n        }\n    }\n\n    static removeListener(target) {\n        if (window.hasOwnProperty(\"ontouchstart\")) {\n            this._touchEvent(target, null, false);\n        } else {\n            this._keyboardEvent(target, null, false);\n        }\n    }\n}\n\nController.controlArea = null;"]}